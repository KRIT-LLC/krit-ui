import React from 'react';
import { MemoryRouter, useLocation } from 'react-router-dom';
import type { Meta, StoryObj } from '@storybook/react';
import { Nav, NavItem } from '@/components/ui/nav';
import { NavPanel, NavPanelProps } from '@/components/ui/nav-panel';

const DashboardIcon = () => <div>üìä</div>;
const UsersIcon = () => <div>üë•</div>;
const SettingsIcon = () => <div>‚öôÔ∏è</div>;
const ProfileIcon = () => <div>üë§</div>;
const LogoutIcon = () => <div>üö™</div>;
const FirstPageIcon = () => <div>‚óÄ</div>;
const LastPageIcon = () => <div>‚ñ∂</div>;

const MockLink = ({ to, children, ...props }: { to: string; children: React.ReactNode }) => (
  <a href={to} {...props}>
    {children}
  </a>
);

const NavPanelWithRouter = (props: NavPanelProps) => {
  const location = useLocation();
  return (
    <div className='max-w-[300px]'>
      <NavPanel {...props} location={location} />
    </div>
  );
};

const meta: Meta<typeof NavPanel> = {
  title: 'Components/UI/NavPanel',
  component: NavPanel,
  parameters: {
    layout: 'fullscreen',
    docs: {
      description: {
        component:
          '–ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è, –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é –∏ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ —Å–ª–æ—Ç—ã. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å react-router –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è.',
      },
    },
  },
  decorators: [
    Story => (
      <MemoryRouter initialEntries={['/dashboard']}>
        <div style={{ display: 'flex', height: '100vh' }}>
          <Story />
        </div>
      </MemoryRouter>
    ),
  ],
  tags: ['autodocs'],
  argTypes: {
    isCollapsed: {
      control: 'boolean',
      description: '–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏',
    },
    navItems: {
      description: '–°–ø–∏—Å–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –±–ª–æ–∫–∞–º',
    },
    projectName: {
      control: 'text',
      description: '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
    },
    linkComponent: {
      description: '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, NavLink –∏–∑ react-router)',
    },
    profileNavSlot: {
      description: '–°–ª–æ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–æ–π',
    },
    expandableNavSlot: {
      description: '–°–ª–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–∞–Ω–µ–ª–∏ (—Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ)',
    },
  },
};

export default meta;
type Story = StoryObj<typeof NavPanel>;

const baseNavItems: NavItem[][] = [
  [
    { title: 'Dashboard', icon: DashboardIcon, to: '/dashboard' },
    { title: 'Users', icon: UsersIcon, to: '/users' },
  ],
  [{ title: 'Settings', icon: SettingsIcon, to: '/settings' }],
];

const ProfileSlot = ({ isCollapsed }: { isCollapsed: boolean }) => (
  <Nav
    isCollapsed={isCollapsed}
    items={[
      { title: 'Profile', icon: ProfileIcon, to: '/profile', variant: 'ghost' },
      { title: 'Logout', icon: LogoutIcon, onClick: () => console.log('logout'), variant: 'ghost' },
    ]}
    LinkComponent={MockLink}
  />
);

// –°–ª–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–∞–Ω–µ–ª–∏
const ExpandableSlot = ({
  isCollapsed,
  onToggle,
}: {
  isCollapsed: boolean;
  onToggle: () => void;
}) => (
  <Nav
    isCollapsed={isCollapsed}
    items={[
      {
        title: isCollapsed ? 'Expand' : 'Collapse',
        icon: isCollapsed ? LastPageIcon : FirstPageIcon,
        onClick: onToggle,
        variant: 'ghost',
      },
    ]}
    LinkComponent={MockLink}
  />
);

/**
 * –ë–∞–∑–æ–≤–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å –≤ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∏–∫–æ–Ω–∫–∞–º–∏ –∏ —Ç–µ–∫—Å—Ç–æ–º.
 */
export const Default: Story = {
  render: args => {
    const [isCollapsed, setIsCollapsed] = React.useState(args.isCollapsed);

    return (
      <NavPanelWithRouter
        {...args}
        isCollapsed={isCollapsed}
        profileNavSlot={<ProfileSlot isCollapsed={isCollapsed} />}
        expandableNavSlot={
          <ExpandableSlot isCollapsed={isCollapsed} onToggle={() => setIsCollapsed(!isCollapsed)} />
        }
      />
    );
  },
  args: {
    isCollapsed: false,
    navItems: baseNavItems,
    projectName: 'My Project',
    linkComponent: MockLink,
  },
};

/**
 * –°–≤–µ—Ä–Ω—É—Ç–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å.
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∫–æ–Ω–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, —á—Ç–æ —ç–∫–æ–Ω–æ–º–∏—Ç –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ.
 */
export const Collapsed: Story = {
  render: args => {
    const [isCollapsed, setIsCollapsed] = React.useState(args.isCollapsed);

    return (
      <NavPanelWithRouter
        {...args}
        isCollapsed={isCollapsed}
        profileNavSlot={<ProfileSlot isCollapsed={isCollapsed} />}
        expandableNavSlot={
          <ExpandableSlot isCollapsed={isCollapsed} onToggle={() => setIsCollapsed(!isCollapsed)} />
        }
      />
    );
  },
  args: {
    isCollapsed: true,
    navItems: baseNavItems,
    projectName: 'My Project',
    linkComponent: MockLink,
  },
};

/**
 * –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞.
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è.
 */
export const WithCustomProjectName: Story = {
  ...Default,
  args: {
    ...Default.args,
    projectName: (
      <div className='flex items-center gap-2'>
        <span className='text-blue-500'>üöÄ</span>
        <span>My Awesome App</span>
      </div>
    ),
  },
};
